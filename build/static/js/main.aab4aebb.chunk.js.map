{"version":3,"sources":["login/index.js","context.js","formularios/index.js","login/logged.js","formulario/custom-input.js","formulario/cartao-pergunta.js","formulario/index.js","formulario-read-only/custom-input.js","formulario-read-only/cartao-pergunta.js","formulario-read-only/index.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","onLogin","bind","e","xhr","XMLHttpRequest","addEventListener","url","JSON","parse","responseText","window","location","replace","open","process","send","id","type","onClick","this","Component","globalState","user","GlobalStateContext","React","createContext","UpdateGlobalStateContext","undefined","Formularios","state","itemSelected","forms","onSelect","onEditPath","onEmptySelection","onRemove","loadForms","setState","target","onreadystatechange","readyState","status","alert","map","form","push","context","setRequestHeader","lastToken","console","log","className","to","item","key","title","link","onChange","name","contextType","Logged","token","document","URL","split","isUserLogged","loadUser","CustomInput","component","onChangeComponent","value","files","getElementById","data","data-id","accept","idQuestion","CartaoPergunta","onChangeQuestion","question","htmlFor","index","components","Formulario","questions","questionsId","componentsId","selected","selectedBoard","selectedList","boards","lists","onAddQuestion","onAddComponent","onRemoveQuestion","onSelectBoard","onSelectList","onChangeTitle","onSave","loadBoards","loadLists","selector","board","options","selectedIndex","getAttribute","list","idList","stringify","next","text","idBoard","answer","idComponent","titleQuestion","onChangeAnswer","FormularioReadOnly","answers","loadForm","onSend","reload","findCount","allowMulti","newAnswers","_answer","Protected","children","rest","useContext","render","pathname","from","App","path","Boolean","hostname","match","GlobalStateProvider","useReducer","newState","Provider","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aab4aebb.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Login extends Component {\n  constructor (props) {\n    super(props)\n    this.onLogin = this.onLogin.bind(this)\n  }\n\n  // Método para autenticação\n  onLogin (e) {\n    const xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', () => {\n      const { url } = JSON.parse(xhr.responseText)\n      window.location.replace(url)\n    })\n    xhr.open('GET', process.env.REACT_APP_API + 'login')\n    xhr.send()\n  }\n\n  render () {\n    return (\n      <div id='login'>\n        <button type='button' onClick={this.onLogin}>Entrar com Trello</button>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import React from 'react'\n\nimport './index.css'\n\nconst globalState = {\n  user: null\n}\n\nconst GlobalStateContext = React.createContext(globalState)\nconst UpdateGlobalStateContext = React.createContext(undefined)\n\nexport {\n  GlobalStateContext,\n  UpdateGlobalStateContext,\n  globalState\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { GlobalStateContext } from '../context'\nclass Formularios extends Component {\n  static contextType = GlobalStateContext\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      itemSelected: null,\n      forms: []\n    }\n\n    this.onSelect = this.onSelect.bind(this)\n    this.onEditPath = this.onEditPath.bind(this)\n    this.onEmptySelection = this.onEmptySelection.bind(this)\n    this.onRemove = this.onRemove.bind(this)\n    this.loadForms = this.loadForms.bind(this)\n  }\n\n  componentDidMount () {\n    this.loadForms()\n  }\n\n  onSelect (e) {\n    this.setState({\n      itemSelected: e.target.id\n    })\n  }\n\n  onRemove (e) {\n    this.onEmptySelection()\n    var id = this.state.itemSelected\n    var xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState == 4) {\n        if (xhr.status === 204) {\n          alert('Removido com sucesso!')\n          const forms = []\n          this.state.forms.map((form) => {\n            if (form.id != id) {\n              forms.push(form)\n            }\n          })\n          this.setState({ forms: forms })\n        } else {\n          alert('Falha em remover!')\n        }\n      }\n    }\n    xhr.open('delete', process.env.REACT_APP_API + 'users/' + this.context.user.id + '/forms/' + id)\n    xhr.setRequestHeader('Authorization', this.context.user.lastToken)\n    xhr.send()\n  }\n\n  onEditPath (e) {\n    if (this.state.itemSelected) {\n      return '/formulario/' + this.state.itemSelected\n    } else {\n      return '/formularios'\n    }\n  }\n\n  onEmptySelection () {\n    if (!this.state.itemSelected) {\n      alert('Selecione um item para realizar esta ação.')\n    }\n  }\n\n  loadForms () {\n    const xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', () => {\n      const forms = JSON.parse(xhr.responseText)\n      this.setState({ forms: forms })\n    })\n    xhr.open('get', process.env.REACT_APP_API + 'users/' + this.context.user.id + '/forms')\n    xhr.setRequestHeader('Authorization', this.context.user.lastToken)\n    xhr.send()\n  }\n\n  componentDidUpdate () {\n    console.log(this.state)\n  }\n\n  render () {\n    return (\n      <div className='container'>\n        <div>\n          <div className='menu-table'>\n            <div className='table-button'>\n              <Link to='/formulario'>\n                <button>\n                Criar\n                </button>\n              </Link>\n            </div>\n            {/*<div className='table-button'>\n              <Link onClick={this.onEmptySelection} to={this.onEditPath}>\n                <button>\n                Editar\n                </button>\n              </Link>\n            </div>*/}\n            <div className='table-button'>\n              <Link onClick={this.onRemove} to='/formularios'>\n                <button>\n                Remover\n                </button>\n              </Link>\n            </div>\n            <div className='table-button'>\n              <button onClick={this.loadForms}>\n                Atualizar \n              </button>\n            </div>\n          </div>\n          <div className='table-search'>\n            <input type='text' />\n          </div>\n        </div>\n        <div className='table-div'>\n          <table>\n            <thead>\n              <tr>\n                <th>Título:</th>\n                <th>Link:</th>\n                <th>Selecionar</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.forms.map((item, key) => {\n                return (\n                  <tr key={key}>\n                    <td>{item.title}</td>\n                    <td><Link to={'/formulario/' + item.link + '/responder'}>{item.link}</Link></td>\n                    <td><input onChange={this.onSelect} type='radio' name='select' id={item.id} /></td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Formularios\n","import React,{Component} from 'react'\nimport {UpdateGlobalStateContext} from '../context.js'\nimport {Redirect} from 'react-router-dom'\n\nclass Logged extends Component{\n  static contextType = UpdateGlobalStateContext\n\n  constructor(props){\n    super(props)\n    this.state={\n      token : document.URL.split('#')[1].split('=')[1],\n      isUserLogged:false,\n    }\n    this.loadUser = this.loadUser.bind(this)\n  }\n\n  componentDidMount(){\n    this.loadUser()\n  }\n\n  loadUser(){\n    const xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', () => {\n      const user = JSON.parse(xhr.responseText)\n      this.context({user:user})\n      this.setState({isUserLogged:true})\n      console.log('sucesso!')\n    })\n    xhr.open('get', process.env.REACT_APP_API + 'logged')\n    xhr.setRequestHeader('Authorization', this.state.token)\n    xhr.send()\n  }\n\n  render(){\n    if(this.state.isUserLogged){\n      return (<Redirect to='/formularios'/>)\n    }else{\n      return (<div/>)\n    }\n  }\n}\n\nexport default Logged","import React, { Component } from 'react'\n\nclass CustomInput extends Component {\n  constructor (props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange (e) {\n    if (this.props.component.type !== 'file') {\n      this.props.onChangeComponent(this.props.component.id, e.target.value)\n    } else {\n      this.props.onChangeComponent(this.props.component.id, e.target.files[0])\n    }\n  }\n\n  componentWillReceiveProps (props) {\n    document.getElementById('component' + this.props.component.id).value = props.component.data\n  }\n\n  render () {\n    if (this.props.component.type === 'textarea') {\n      return (\n        <div data-id={this.props.component.id}>\n          <textarea id={'component' + this.props.component.id} data-id={this.props.component.id} onChange={this.onChange} />\n        </div>\n      )\n    } else if (this.props.component.type === 'date' || this.props.component.type === 'file') {\n      return (\n        <div>\n          <input id={'component' + this.props.component.id} className='input-text' data-id={this.props.component.id} type={this.props.component.type} onChange={this.onChange} accept='image/*' />\n        </div>\n      )\n    } else {\n      return (\n        <div data-id={this.props.component.id}>\n          <div className='div-left'>\n            <input data-id={this.props.component.id} type={this.props.component.type} name={'question' + this.props.idQuestion} />\n          </div>\n          <div className='div-right'>\n            <input id={'component' + this.props.component.id} className='input-text' type='text' onChange={this.onChange} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default CustomInput\n","import React, { Component } from 'react'\nimport CustomInput from './custom-input'\n\nclass CartaoPergunta extends Component {\n  constructor (props) {\n    super(props)\n    this.onChangeQuestion = this.onChangeQuestion.bind(this)\n  }\n\n  onChangeQuestion (e) {\n    this.props.onChangeQuestion(this.props.question.id, e.target.value)\n  }\n\n  componentDidUpdate () {\n    console.log('questao', this.props.question)\n  }\n\n  componentWillReceiveProps (props) {\n    document.getElementById('question' + this.props.id).value = props.question.title\n  }\n\n  render () {\n    return (\n      <div id={this.props.id} className='auto-generated'>\n        <div className='div-left'>\n          <input onClick={this.props.onSelect} data-id={this.props.id} type='radio' name='selected' />\n        </div>\n        <div className='div-right'>\n          <div className='question-text-div'>\n            <label className='question-label' htmlFor={'question' + this.props.id}>Questão {1 + this.props.index}</label>\n            <input className='input-text' id={'question' + this.props.id} type='text' onChange={this.onChangeQuestion} />\n          </div>\n          <div>\n            {this.props.question.components.map((component, key) => {\n              return (\n                <div className='question-component-div' key={key}>\n                  <CustomInput\n                    component={component}\n                    idQuestion={this.props.question.id}\n                    onChangeComponent={this.props.onChangeComponent}\n                  />\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CartaoPergunta\n","import React, { Component } from 'react'\nimport CartaoPergunta from './cartao-pergunta'\nimport { Link } from 'react-router-dom'\nimport { GlobalStateContext } from '../context'\n\nclass Formulario extends Component {\n  static contextType = GlobalStateContext\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: '',\n      questions: [],\n      questionsId: 0,\n      componentsId: 0,\n      selected: null,\n      selectedBoard: null,\n      selectedList: null,\n      boards: [],\n      lists: []\n    }\n    this.onAddQuestion = this.onAddQuestion.bind(this)\n    this.onAddComponent = this.onAddComponent.bind(this)\n    this.onRemoveQuestion = this.onRemoveQuestion.bind(this)\n    this.onSelect = this.onSelect.bind(this)\n    this.onSelectBoard = this.onSelectBoard.bind(this)\n    this.onSelectList = this.onSelectList.bind(this)\n\n    this.onChangeQuestion = this.onChangeQuestion.bind(this)\n    this.onChangeComponent = this.onChangeComponent.bind(this)\n    this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    this.onSave = this.onSave.bind(this)\n    this.loadBoards = this.loadBoards.bind(this)\n    this.loadLists = this.loadLists.bind(this)\n  }\n\n  onSelectBoard (e) {\n    let selected = null\n    const selector = e.target\n    this.state.boards.map((board) => {\n      if (board.id === selector.options[selector.selectedIndex].getAttribute('data-id')) {\n        selected = board\n      }\n    })\n    this.setState({ selectedBoard: selected })\n  }\n\n  onSelectList (e) {\n    let selected = null\n    const selector = e.target\n    this.state.lists.map((list) => {\n      if (list.id === selector.options[selector.selectedIndex].getAttribute('data-id')) {\n        selected = list\n      }\n    })\n    this.setState({ selectedList: selected })\n  }\n\n  loadBoards () {\n    const xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', () => {\n      const boards = JSON.parse(xhr.responseText)\n      this.setState({\n        boards: boards,\n        selectedBoard: boards[0]\n      })\n      this.loadLists()\n    })\n    xhr.open('get', process.env.REACT_APP_API + 'trello/boards')\n    xhr.setRequestHeader('Authorization', this.context.user.lastToken)\n    xhr.send()\n  }\n\n  loadLists () {\n    if(!this.state.selectedBoard){\n      return 1\n    }\n    const xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', () => {\n      const lists = JSON.parse(xhr.responseText)\n      this.setState({ lists: lists, selectedList:lists[0] })\n    })\n    xhr.open('get', process.env.REACT_APP_API + 'trello/boards/' + this.state.selectedBoard.id + '/lists')\n    xhr.setRequestHeader('Authorization', this.context.user.lastToken)\n    xhr.send()\n  }\n\n  onSave () {\n    const form = {\n      title: this.state.title,\n      idList: this.state.selectedList.id,\n      questions: this.state.questions\n    }\n    console.log(form)\n    const xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () =>{\n      if(xhr.readyState === 4){\n        if(xhr.status !== 201){\n          alert(\"Houve um erro!\")\n        }else{\n          alert(\"Salvo com sucesso!\")\n        }\n      }\n    }\n    xhr.open('post', process.env.REACT_APP_API + 'users/' + this.context.user.id + '/forms')\n    xhr.setRequestHeader('Authorization', this.context.user.lastToken)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.send(JSON.stringify(form))\n  }\n\n  onChangeTitle (e) {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  onSelect (e) {\n    this.setState({\n      selected: e.target.getAttribute('data-id')\n    })\n  }\n\n  onAddQuestion () {\n    this.state.questions.push({\n      id: this.state.questionsId,\n      title: '',\n      components: []\n    })\n    this.setState({ questionsId: this.state.questionsId + 1 })\n  }\n\n  onAddComponent (e, type) {\n    if (this.state.selected) {\n      this.state.questions.map((question) => {\n        if (question.id == this.state.selected) {\n          question.components.push({\n            id: this.state.componentsId,\n            type: type,\n            data: ''\n          })\n        }\n      })\n      this.setState({ componentsId: this.state.componentsId + 1 })\n    } else {\n      alert('Primeiro selecione uma pergunta')\n    }\n  }\n\n  onRemoveQuestion (e) {\n    if (this.state.selected) {\n      const questions = []\n      let next = null\n      console.log(this.state.selected)\n      this.state.questions.map((question, key) => {\n        if (question.id != this.state.selected) {\n          questions.push(question)\n        } else if (this.state.questions[key + 1]) {\n          next = this.state.questions[key + 1].id\n        }\n      })\n      this.setState({\n        questions: questions,\n        selected: next\n      })\n    } else {\n      alert('Primeiro selecione uma pergunta')\n    }\n  }\n\n  onChangeComponent (id, text) {\n    this.state.questions.map((question) => {\n      question.components.map((component) => {\n        if (component.id == id) {\n          component.data = text\n        }\n      })\n    })\n  }\n\n  onChangeQuestion (id, title, component = null) {\n    this.state.questions.map((question) => {\n      if (question.id == id) {\n        question.title = title\n      }\n    })\n  }\n\n  componentDidMount () {\n    this.loadBoards()\n  }\n\n  componentDidUpdate(){\n    if(this.state.selectedList &&\n      this.state.selectedList.idBoard !=\n      this.state.selectedBoard.id){\n      console.log('Atualizando', this.state.selectedList, this.state.selectedBoard.id)\n      this.loadLists()\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='menu-form'>\n          <div>\n            <h3>\n              Menu\n            </h3>\n          </div>\n          <hr />\n          <div>\n              <h3>Selecione o quadro do trelo desejado:</h3>\n              <select onChange={this.onSelectBoard}>\n                {this.state.boards.map((board, key) => {\n                  return (\n                    <option key={key} data-id={board.id}>\n                      {board.name}\n                    </option>\n                  )\n                })}\n              </select>\n            </div>\n            {this.state.selectedBoard ? <div>\n              <h3>Selecione a lista do quadro:</h3>\n              <select onChange={this.onSelectList}>\n                {this.state.lists.map((list, key) => {\n                  return (\n                    <option key={key} data-id={list.id}>\n                      {list.name}\n                    </option>\n                  )\n                })}\n              </select>\n                                        </div> : null}\n          <div className='menu-div-buttons'>\n            <div>\n              <button onClick={this.onAddQuestion}>\n              Adicionar cartão pergunta\n              </button>\n              <button onClick={this.onRemoveQuestion}>\n              Remover cartão pergunta\n              </button>\n              <button onClick={(e) => { this.onAddComponent(e, 'textarea') }}>\n              Adicionar textarea\n              </button>\n            </div>\n            <div>\n              <button onClick={(e) => { this.onAddComponent(e, 'checkbox') }}>\n              Adicionar checkbox\n              </button>\n              <button onClick={(e) => { this.onAddComponent(e, 'radio') }}>\n              Adicionar radiobox\n              </button>\n              <button onClick={(e) => { this.onAddComponent(e, 'date') }}>\n              Adicionar campo data\n              </button>\n            </div>\n            <div>\n              <button onClick={(e) => { this.onAddComponent(e, 'file') }}>\n              Adicionar carregar arquivo\n              </button>\n              <Link to='/formularios' onClick={this.onSave}>\n                <button>\n              Salvar\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className='editor-form'>\n          <div>\n            <h3>\n              Título\n            </h3>\n            <input onChange={this.onChangeTitle} />\n          </div>\n          <hr />\n          <div>\n            {this.state.questions.map((question, key) => {\n              console.log(question)\n              return (\n                <CartaoPergunta\n                  id={question.id}\n                  index={key}\n                  key={key}\n                  onSelect={this.onSelect}\n                  onChangeQuestion={this.onChangeQuestion}\n                  onChangeComponent={this.onChangeComponent}\n                  question={question}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Formulario\n","import React, { Component } from 'react'\n\nclass CustomInput extends Component {\n  constructor (props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange (e) {\n    const idQuestion = this.props.idQuestion\n    const type = e.target.getAttribute('type')\n    const value = this.props.component.type === 'file'\n      ? e.target.files[0] : e.target.value\n    var answer = {\n      idQuestion: idQuestion,\n      value: value,\n      idComponent: e.target.getAttribute('data-id'),\n      titleQuestion: this.props.titleQuestion,\n      type: type\n    }\n\n    this.props.onChangeAnswer(answer)\n  }\n\n  render () {\n    if (this.props) {\n      const type = this.props.component.type\n      const text = this.props.component.text\n      const id = this.props.component.id\n      if (type === 'textarea') {\n        return (\n          <div>\n            <textarea data-id={id} onChange={this.onChange} />\n          </div>\n        )\n      } else if (type === 'file' || type === 'date') {\n        return (\n          <div>\n            <input data-id={id} type={type} className='input-text' onChange={this.onChange} accept='image/*' />\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <div className='div-left'>\n              <input data-id={id} value={text} type={type} name={'question' + this.props.idQuestion} onChange={this.onChange} />\n            </div>\n            <div className='div-right'>\n              <label>{text}</label>\n            </div>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default CustomInput\n","import React, { Component } from 'react'\nimport CustomInput from './custom-input'\n\nclass CartaoPergunta extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='question-text-div'>\n          <h3>{this.props.question.title}</h3>\n        </div>\n        <div>\n          {this.props.question.components.map((item, key) => {\n            return (\n              <CustomInput\n                key={key}\n                component={item}\n                onChangeAnswer={this.props.onChangeAnswer}\n                idQuestion={this.props.question.id}\n                titleQuestion={this.props.question.title}\n              />\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CartaoPergunta\n","import React, { Component } from 'react'\nimport CartaoPergunta from './cartao-pergunta'\n\nclass FormularioReadOnly extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      form: { questions: [] },\n      answers: []\n    }\n\n    this.loadForm = this.loadForm.bind(this)\n    this.onChangeAnswer = this.onChangeAnswer.bind(this)\n    this.onSend = this.onSend.bind(this)\n  }\n\n  onSend (e) {\n    var xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          alert('Enviado com sucesso!')\n          window.location.reload()\n        } else {\n          alert('Houve algum erro!')\n        }\n      }\n    }\n    xhr.open('post', process.env.REACT_APP_API + 'answers')\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    var form = this.state.form\n    form.answers = this.state.answers\n    xhr.send(JSON.stringify(form))\n  }\n\n  onChangeAnswer (answer) {\n    var findCount = 0\n    const type = answer.type\n    const allowMulti = type !== 'radio'\n    var newAnswers = []\n    this.state.answers.map((_answer) => {\n      if (!allowMulti && _answer.idQuestion === answer.idQuestion) {\n        _answer.value = answer.value\n        _answer.idComponent = answer.idComponent\n        _answer.type = type\n        _answer.titleQuestion = answer.titleQuestion\n        findCount += 1\n      } else if (allowMulti && _answer.idComponent === answer.idComponent) {\n        if (type === 'textarea') {\n          _answer.value += answer.value\n        } else {\n          _answer.value = answer.value\n        }\n        findCount += 1\n      }\n      newAnswers.push(_answer)\n    })\n    if (!findCount) {\n      newAnswers = this.state.answers\n      newAnswers.push(answer)\n    }\n    this.setState({ answers: newAnswers })\n  }\n\n  loadForm () {\n    const xhr = new XMLHttpRequest()\n    xhr.addEventListener('load', () => {\n      var form = JSON.parse(xhr.responseText)\n      this.setState({ form: form })\n    })\n    const link = document.URL.split('/')[4]\n    xhr.open('get', process.env.REACT_APP_API + 'forms/' + link + '?full=true')\n    xhr.send()\n  }\n\n  componentDidMount () {\n    this.loadForm()\n  }\n\n  componentDidUpdate () {\n    console.log(this.state)\n  }\n\n  render () {\n    return (\n      <div className='container'>\n        <div className='auto-generated'>\n          {this.state.form.questions.map((question, key) => {\n            return (\n              <CartaoPergunta\n                key={key}\n                question={question}\n                onChangeAnswer={this.onChangeAnswer}\n              />\n            )\n          })}\n        </div>\n        <div>\n          <button onClick={this.onSend}>Enviar</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FormularioReadOnly\n","import React, { Component } from 'react'\nimport './App.css'\nimport Login from './login/index.js'\nimport Formularios from './formularios'\nimport Logged from './login/logged.js'\nimport Formulario from './formulario'\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from 'react-router-dom'\nimport FormularioReadOnly from './formulario-read-only'\nimport { GlobalStateContext } from './context'\n\nconst Protected = ({ children, ...rest }) => {\n  const context = React.useContext(GlobalStateContext)\n  const isAuth = () => {\n    return context.user\n  }\n  return (\n    <Route\n      {...rest} render={({ location }) =>\n        isAuth() ? (children)\n          : (<Redirect\n            to={{\n              pathname: '/',\n              state: { from: location }\n            }}\n             />)}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null\n    }\n    this.onLogin = this.onLogin.bind(this)\n  }\n\n  onLogin (user) {\n    this.setState({ user: user })\n  }\n\n  render () {\n    return (\n      <Router className='App'>\n        <div id='header'>\n          <Link to='/formularios'>\n            <h3>MeuFormulário</h3>\n          </Link>\n        </div>\n        <hr />\n        <Switch>\n          <Protected path='/formularios/'>\n            <Formularios />\n          </Protected>\n          <Route path='/formulario/:link/responder'>\n            <FormularioReadOnly />\n          </Route>\n          <Protected path='/formulario/'>\n            <Formulario />\n          </Protected>\n          <Route path='/logged'>\n            <Logged />\n          </Route>\n          <Route path=''>\n            <Login onLogin={this.onLogin} />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { GlobalStateContext, UpdateGlobalStateContext, globalState } from './context.js'\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, setState] = React.useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    globalState)\n  return (\n    <GlobalStateContext.Provider value={state}>\n      <UpdateGlobalStateContext.Provider value={setState}>\n        {children}\n      </UpdateGlobalStateContext.Provider>\n    </GlobalStateContext.Provider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}